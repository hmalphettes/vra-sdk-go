// Code generated by go-swagger; DO NOT EDIT.

package custom_integrations

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"context"
	"net/http"
	"time"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/runtime"
	cr "github.com/go-openapi/runtime/client"

	strfmt "github.com/go-openapi/strfmt"
)

// NewDeprecateByIDAndVersionUsingPOSTParams creates a new DeprecateByIDAndVersionUsingPOSTParams object
// with the default values initialized.
func NewDeprecateByIDAndVersionUsingPOSTParams() *DeprecateByIDAndVersionUsingPOSTParams {
	var ()
	return &DeprecateByIDAndVersionUsingPOSTParams{

		timeout: cr.DefaultTimeout,
	}
}

// NewDeprecateByIDAndVersionUsingPOSTParamsWithTimeout creates a new DeprecateByIDAndVersionUsingPOSTParams object
// with the default values initialized, and the ability to set a timeout on a request
func NewDeprecateByIDAndVersionUsingPOSTParamsWithTimeout(timeout time.Duration) *DeprecateByIDAndVersionUsingPOSTParams {
	var ()
	return &DeprecateByIDAndVersionUsingPOSTParams{

		timeout: timeout,
	}
}

// NewDeprecateByIDAndVersionUsingPOSTParamsWithContext creates a new DeprecateByIDAndVersionUsingPOSTParams object
// with the default values initialized, and the ability to set a context for a request
func NewDeprecateByIDAndVersionUsingPOSTParamsWithContext(ctx context.Context) *DeprecateByIDAndVersionUsingPOSTParams {
	var ()
	return &DeprecateByIDAndVersionUsingPOSTParams{

		Context: ctx,
	}
}

// NewDeprecateByIDAndVersionUsingPOSTParamsWithHTTPClient creates a new DeprecateByIDAndVersionUsingPOSTParams object
// with the default values initialized, and the ability to set a custom HTTPClient for a request
func NewDeprecateByIDAndVersionUsingPOSTParamsWithHTTPClient(client *http.Client) *DeprecateByIDAndVersionUsingPOSTParams {
	var ()
	return &DeprecateByIDAndVersionUsingPOSTParams{
		HTTPClient: client,
	}
}

/*DeprecateByIDAndVersionUsingPOSTParams contains all the parameters to send to the API endpoint
for the deprecate by Id and version using p o s t operation typically these are written to a http.Request
*/
type DeprecateByIDAndVersionUsingPOSTParams struct {

	/*APIVersion
	  The version of the API in yyyy-MM-dd format (UTC). For versioning information please refer to /codestream/api/about

	*/
	APIVersion string
	/*ID
	  The ID of the Custom Integration

	*/
	ID string
	/*Version
	  The version of the Custom Integration

	*/
	Version string

	timeout    time.Duration
	Context    context.Context
	HTTPClient *http.Client
}

// WithTimeout adds the timeout to the deprecate by Id and version using p o s t params
func (o *DeprecateByIDAndVersionUsingPOSTParams) WithTimeout(timeout time.Duration) *DeprecateByIDAndVersionUsingPOSTParams {
	o.SetTimeout(timeout)
	return o
}

// SetTimeout adds the timeout to the deprecate by Id and version using p o s t params
func (o *DeprecateByIDAndVersionUsingPOSTParams) SetTimeout(timeout time.Duration) {
	o.timeout = timeout
}

// WithContext adds the context to the deprecate by Id and version using p o s t params
func (o *DeprecateByIDAndVersionUsingPOSTParams) WithContext(ctx context.Context) *DeprecateByIDAndVersionUsingPOSTParams {
	o.SetContext(ctx)
	return o
}

// SetContext adds the context to the deprecate by Id and version using p o s t params
func (o *DeprecateByIDAndVersionUsingPOSTParams) SetContext(ctx context.Context) {
	o.Context = ctx
}

// WithHTTPClient adds the HTTPClient to the deprecate by Id and version using p o s t params
func (o *DeprecateByIDAndVersionUsingPOSTParams) WithHTTPClient(client *http.Client) *DeprecateByIDAndVersionUsingPOSTParams {
	o.SetHTTPClient(client)
	return o
}

// SetHTTPClient adds the HTTPClient to the deprecate by Id and version using p o s t params
func (o *DeprecateByIDAndVersionUsingPOSTParams) SetHTTPClient(client *http.Client) {
	o.HTTPClient = client
}

// WithAPIVersion adds the aPIVersion to the deprecate by Id and version using p o s t params
func (o *DeprecateByIDAndVersionUsingPOSTParams) WithAPIVersion(aPIVersion string) *DeprecateByIDAndVersionUsingPOSTParams {
	o.SetAPIVersion(aPIVersion)
	return o
}

// SetAPIVersion adds the apiVersion to the deprecate by Id and version using p o s t params
func (o *DeprecateByIDAndVersionUsingPOSTParams) SetAPIVersion(aPIVersion string) {
	o.APIVersion = aPIVersion
}

// WithID adds the id to the deprecate by Id and version using p o s t params
func (o *DeprecateByIDAndVersionUsingPOSTParams) WithID(id string) *DeprecateByIDAndVersionUsingPOSTParams {
	o.SetID(id)
	return o
}

// SetID adds the id to the deprecate by Id and version using p o s t params
func (o *DeprecateByIDAndVersionUsingPOSTParams) SetID(id string) {
	o.ID = id
}

// WithVersion adds the version to the deprecate by Id and version using p o s t params
func (o *DeprecateByIDAndVersionUsingPOSTParams) WithVersion(version string) *DeprecateByIDAndVersionUsingPOSTParams {
	o.SetVersion(version)
	return o
}

// SetVersion adds the version to the deprecate by Id and version using p o s t params
func (o *DeprecateByIDAndVersionUsingPOSTParams) SetVersion(version string) {
	o.Version = version
}

// WriteToRequest writes these params to a swagger request
func (o *DeprecateByIDAndVersionUsingPOSTParams) WriteToRequest(r runtime.ClientRequest, reg strfmt.Registry) error {

	if err := r.SetTimeout(o.timeout); err != nil {
		return err
	}
	var res []error

	// query param apiVersion
	qrAPIVersion := o.APIVersion
	qAPIVersion := qrAPIVersion
	if err := r.SetQueryParam("apiVersion", qAPIVersion); err != nil {
		return err
	}

	// path param id
	if err := r.SetPathParam("id", o.ID); err != nil {
		return err
	}

	// path param version
	if err := r.SetPathParam("version", o.Version); err != nil {
		return err
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}
