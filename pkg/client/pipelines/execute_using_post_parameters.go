// Code generated by go-swagger; DO NOT EDIT.

package pipelines

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"context"
	"net/http"
	"time"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/runtime"
	cr "github.com/go-openapi/runtime/client"

	strfmt "github.com/go-openapi/strfmt"

	models "github.com/vmware/vra-sdk-go/pkg/models"
)

// NewExecuteUsingPOSTParams creates a new ExecuteUsingPOSTParams object
// with the default values initialized.
func NewExecuteUsingPOSTParams() *ExecuteUsingPOSTParams {
	var ()
	return &ExecuteUsingPOSTParams{

		timeout: cr.DefaultTimeout,
	}
}

// NewExecuteUsingPOSTParamsWithTimeout creates a new ExecuteUsingPOSTParams object
// with the default values initialized, and the ability to set a timeout on a request
func NewExecuteUsingPOSTParamsWithTimeout(timeout time.Duration) *ExecuteUsingPOSTParams {
	var ()
	return &ExecuteUsingPOSTParams{

		timeout: timeout,
	}
}

// NewExecuteUsingPOSTParamsWithContext creates a new ExecuteUsingPOSTParams object
// with the default values initialized, and the ability to set a context for a request
func NewExecuteUsingPOSTParamsWithContext(ctx context.Context) *ExecuteUsingPOSTParams {
	var ()
	return &ExecuteUsingPOSTParams{

		Context: ctx,
	}
}

// NewExecuteUsingPOSTParamsWithHTTPClient creates a new ExecuteUsingPOSTParams object
// with the default values initialized, and the ability to set a custom HTTPClient for a request
func NewExecuteUsingPOSTParamsWithHTTPClient(client *http.Client) *ExecuteUsingPOSTParams {
	var ()
	return &ExecuteUsingPOSTParams{
		HTTPClient: client,
	}
}

/*ExecuteUsingPOSTParams contains all the parameters to send to the API endpoint
for the execute using p o s t operation typically these are written to a http.Request
*/
type ExecuteUsingPOSTParams struct {

	/*APIVersion
	  The version of the API in yyyy-MM-dd format (UTC). For versioning information please refer to /codestream/api/about

	*/
	APIVersion string
	/*Body
	  Execution Request for a pipeline

	*/
	Body models.ExecutionRequest
	/*ID
	  The ID of the Pipeline

	*/
	ID string

	timeout    time.Duration
	Context    context.Context
	HTTPClient *http.Client
}

// WithTimeout adds the timeout to the execute using p o s t params
func (o *ExecuteUsingPOSTParams) WithTimeout(timeout time.Duration) *ExecuteUsingPOSTParams {
	o.SetTimeout(timeout)
	return o
}

// SetTimeout adds the timeout to the execute using p o s t params
func (o *ExecuteUsingPOSTParams) SetTimeout(timeout time.Duration) {
	o.timeout = timeout
}

// WithContext adds the context to the execute using p o s t params
func (o *ExecuteUsingPOSTParams) WithContext(ctx context.Context) *ExecuteUsingPOSTParams {
	o.SetContext(ctx)
	return o
}

// SetContext adds the context to the execute using p o s t params
func (o *ExecuteUsingPOSTParams) SetContext(ctx context.Context) {
	o.Context = ctx
}

// WithHTTPClient adds the HTTPClient to the execute using p o s t params
func (o *ExecuteUsingPOSTParams) WithHTTPClient(client *http.Client) *ExecuteUsingPOSTParams {
	o.SetHTTPClient(client)
	return o
}

// SetHTTPClient adds the HTTPClient to the execute using p o s t params
func (o *ExecuteUsingPOSTParams) SetHTTPClient(client *http.Client) {
	o.HTTPClient = client
}

// WithAPIVersion adds the aPIVersion to the execute using p o s t params
func (o *ExecuteUsingPOSTParams) WithAPIVersion(aPIVersion string) *ExecuteUsingPOSTParams {
	o.SetAPIVersion(aPIVersion)
	return o
}

// SetAPIVersion adds the apiVersion to the execute using p o s t params
func (o *ExecuteUsingPOSTParams) SetAPIVersion(aPIVersion string) {
	o.APIVersion = aPIVersion
}

// WithBody adds the body to the execute using p o s t params
func (o *ExecuteUsingPOSTParams) WithBody(body models.ExecutionRequest) *ExecuteUsingPOSTParams {
	o.SetBody(body)
	return o
}

// SetBody adds the body to the execute using p o s t params
func (o *ExecuteUsingPOSTParams) SetBody(body models.ExecutionRequest) {
	o.Body = body
}

// WithID adds the id to the execute using p o s t params
func (o *ExecuteUsingPOSTParams) WithID(id string) *ExecuteUsingPOSTParams {
	o.SetID(id)
	return o
}

// SetID adds the id to the execute using p o s t params
func (o *ExecuteUsingPOSTParams) SetID(id string) {
	o.ID = id
}

// WriteToRequest writes these params to a swagger request
func (o *ExecuteUsingPOSTParams) WriteToRequest(r runtime.ClientRequest, reg strfmt.Registry) error {

	if err := r.SetTimeout(o.timeout); err != nil {
		return err
	}
	var res []error

	// query param apiVersion
	qrAPIVersion := o.APIVersion
	qAPIVersion := qrAPIVersion
	if err := r.SetQueryParam("apiVersion", qAPIVersion); err != nil {
		return err
	}

	if err := r.SetBodyParam(o.Body); err != nil {
		return err
	}

	// path param id
	if err := r.SetPathParam("id", o.ID); err != nil {
		return err
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}
