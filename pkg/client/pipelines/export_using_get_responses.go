// Code generated by go-swagger; DO NOT EDIT.

package pipelines

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"

	strfmt "github.com/go-openapi/strfmt"
)

// ExportUsingGETReader is a Reader for the ExportUsingGET structure.
type ExportUsingGETReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *ExportUsingGETReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewExportUsingGETOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 401:
		result := NewExportUsingGETUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 403:
		result := NewExportUsingGETForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewExportUsingGETNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 500:
		result := NewExportUsingGETInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	default:
		return nil, runtime.NewAPIError("unknown error", response, response.Code())
	}
}

// NewExportUsingGETOK creates a ExportUsingGETOK with default headers values
func NewExportUsingGETOK() *ExportUsingGETOK {
	return &ExportUsingGETOK{}
}

/*ExportUsingGETOK handles this case with default header values.

OK
*/
type ExportUsingGETOK struct {
	Payload string
}

func (o *ExportUsingGETOK) Error() string {
	return fmt.Sprintf("[GET /codestream/api/export][%d] exportUsingGETOK  %+v", 200, o.Payload)
}

func (o *ExportUsingGETOK) GetPayload() string {
	return o.Payload
}

func (o *ExportUsingGETOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response payload
	if err := consumer.Consume(response.Body(), &o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewExportUsingGETUnauthorized creates a ExportUsingGETUnauthorized with default headers values
func NewExportUsingGETUnauthorized() *ExportUsingGETUnauthorized {
	return &ExportUsingGETUnauthorized{}
}

/*ExportUsingGETUnauthorized handles this case with default header values.

Unauthorized Request
*/
type ExportUsingGETUnauthorized struct {
}

func (o *ExportUsingGETUnauthorized) Error() string {
	return fmt.Sprintf("[GET /codestream/api/export][%d] exportUsingGETUnauthorized ", 401)
}

func (o *ExportUsingGETUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewExportUsingGETForbidden creates a ExportUsingGETForbidden with default headers values
func NewExportUsingGETForbidden() *ExportUsingGETForbidden {
	return &ExportUsingGETForbidden{}
}

/*ExportUsingGETForbidden handles this case with default header values.

Forbidden
*/
type ExportUsingGETForbidden struct {
}

func (o *ExportUsingGETForbidden) Error() string {
	return fmt.Sprintf("[GET /codestream/api/export][%d] exportUsingGETForbidden ", 403)
}

func (o *ExportUsingGETForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewExportUsingGETNotFound creates a ExportUsingGETNotFound with default headers values
func NewExportUsingGETNotFound() *ExportUsingGETNotFound {
	return &ExportUsingGETNotFound{}
}

/*ExportUsingGETNotFound handles this case with default header values.

Not Found
*/
type ExportUsingGETNotFound struct {
}

func (o *ExportUsingGETNotFound) Error() string {
	return fmt.Sprintf("[GET /codestream/api/export][%d] exportUsingGETNotFound ", 404)
}

func (o *ExportUsingGETNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewExportUsingGETInternalServerError creates a ExportUsingGETInternalServerError with default headers values
func NewExportUsingGETInternalServerError() *ExportUsingGETInternalServerError {
	return &ExportUsingGETInternalServerError{}
}

/*ExportUsingGETInternalServerError handles this case with default header values.

Server Error
*/
type ExportUsingGETInternalServerError struct {
}

func (o *ExportUsingGETInternalServerError) Error() string {
	return fmt.Sprintf("[GET /codestream/api/export][%d] exportUsingGETInternalServerError ", 500)
}

func (o *ExportUsingGETInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}
