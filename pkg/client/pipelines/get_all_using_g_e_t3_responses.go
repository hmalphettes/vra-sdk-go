// Code generated by go-swagger; DO NOT EDIT.

package pipelines

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"

	"github.com/go-openapi/runtime"

	strfmt "github.com/go-openapi/strfmt"

	models "github.com/vmware/vra-sdk-go/pkg/models"
)

// GetAllUsingGET3Reader is a Reader for the GetAllUsingGET3 structure.
type GetAllUsingGET3Reader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *GetAllUsingGET3Reader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewGetAllUsingGET3OK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 401:
		result := NewGetAllUsingGET3Unauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 403:
		result := NewGetAllUsingGET3Forbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewGetAllUsingGET3NotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 500:
		result := NewGetAllUsingGET3InternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	default:
		return nil, runtime.NewAPIError("unknown error", response, response.Code())
	}
}

// NewGetAllUsingGET3OK creates a GetAllUsingGET3OK with default headers values
func NewGetAllUsingGET3OK() *GetAllUsingGET3OK {
	return &GetAllUsingGET3OK{}
}

/*GetAllUsingGET3OK handles this case with default header values.

'Success' with the requested Pipelines
*/
type GetAllUsingGET3OK struct {
	Payload models.Pipelines
}

func (o *GetAllUsingGET3OK) Error() string {
	return fmt.Sprintf("[GET /codestream/api/pipelines][%d] getAllUsingGET3OK  %+v", 200, o.Payload)
}

func (o *GetAllUsingGET3OK) GetPayload() models.Pipelines {
	return o.Payload
}

func (o *GetAllUsingGET3OK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response payload as interface type
	payload, err := models.UnmarshalPipelines(response.Body(), consumer)
	if err != nil {
		return err
	}
	o.Payload = payload

	return nil
}

// NewGetAllUsingGET3Unauthorized creates a GetAllUsingGET3Unauthorized with default headers values
func NewGetAllUsingGET3Unauthorized() *GetAllUsingGET3Unauthorized {
	return &GetAllUsingGET3Unauthorized{}
}

/*GetAllUsingGET3Unauthorized handles this case with default header values.

Unauthorized Request
*/
type GetAllUsingGET3Unauthorized struct {
}

func (o *GetAllUsingGET3Unauthorized) Error() string {
	return fmt.Sprintf("[GET /codestream/api/pipelines][%d] getAllUsingGET3Unauthorized ", 401)
}

func (o *GetAllUsingGET3Unauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewGetAllUsingGET3Forbidden creates a GetAllUsingGET3Forbidden with default headers values
func NewGetAllUsingGET3Forbidden() *GetAllUsingGET3Forbidden {
	return &GetAllUsingGET3Forbidden{}
}

/*GetAllUsingGET3Forbidden handles this case with default header values.

Forbidden
*/
type GetAllUsingGET3Forbidden struct {
}

func (o *GetAllUsingGET3Forbidden) Error() string {
	return fmt.Sprintf("[GET /codestream/api/pipelines][%d] getAllUsingGET3Forbidden ", 403)
}

func (o *GetAllUsingGET3Forbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewGetAllUsingGET3NotFound creates a GetAllUsingGET3NotFound with default headers values
func NewGetAllUsingGET3NotFound() *GetAllUsingGET3NotFound {
	return &GetAllUsingGET3NotFound{}
}

/*GetAllUsingGET3NotFound handles this case with default header values.

Not Found
*/
type GetAllUsingGET3NotFound struct {
}

func (o *GetAllUsingGET3NotFound) Error() string {
	return fmt.Sprintf("[GET /codestream/api/pipelines][%d] getAllUsingGET3NotFound ", 404)
}

func (o *GetAllUsingGET3NotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewGetAllUsingGET3InternalServerError creates a GetAllUsingGET3InternalServerError with default headers values
func NewGetAllUsingGET3InternalServerError() *GetAllUsingGET3InternalServerError {
	return &GetAllUsingGET3InternalServerError{}
}

/*GetAllUsingGET3InternalServerError handles this case with default header values.

Server Error
*/
type GetAllUsingGET3InternalServerError struct {
}

func (o *GetAllUsingGET3InternalServerError) Error() string {
	return fmt.Sprintf("[GET /codestream/api/pipelines][%d] getAllUsingGET3InternalServerError ", 500)
}

func (o *GetAllUsingGET3InternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}
