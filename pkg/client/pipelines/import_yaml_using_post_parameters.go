// Code generated by go-swagger; DO NOT EDIT.

package pipelines

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"context"
	"net/http"
	"time"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/runtime"
	cr "github.com/go-openapi/runtime/client"

	strfmt "github.com/go-openapi/strfmt"
)

// NewImportYamlUsingPOSTParams creates a new ImportYamlUsingPOSTParams object
// with the default values initialized.
func NewImportYamlUsingPOSTParams() *ImportYamlUsingPOSTParams {
	var ()
	return &ImportYamlUsingPOSTParams{

		timeout: cr.DefaultTimeout,
	}
}

// NewImportYamlUsingPOSTParamsWithTimeout creates a new ImportYamlUsingPOSTParams object
// with the default values initialized, and the ability to set a timeout on a request
func NewImportYamlUsingPOSTParamsWithTimeout(timeout time.Duration) *ImportYamlUsingPOSTParams {
	var ()
	return &ImportYamlUsingPOSTParams{

		timeout: timeout,
	}
}

// NewImportYamlUsingPOSTParamsWithContext creates a new ImportYamlUsingPOSTParams object
// with the default values initialized, and the ability to set a context for a request
func NewImportYamlUsingPOSTParamsWithContext(ctx context.Context) *ImportYamlUsingPOSTParams {
	var ()
	return &ImportYamlUsingPOSTParams{

		Context: ctx,
	}
}

// NewImportYamlUsingPOSTParamsWithHTTPClient creates a new ImportYamlUsingPOSTParams object
// with the default values initialized, and the ability to set a custom HTTPClient for a request
func NewImportYamlUsingPOSTParamsWithHTTPClient(client *http.Client) *ImportYamlUsingPOSTParams {
	var ()
	return &ImportYamlUsingPOSTParams{
		HTTPClient: client,
	}
}

/*ImportYamlUsingPOSTParams contains all the parameters to send to the API endpoint
for the import yaml using p o s t operation typically these are written to a http.Request
*/
type ImportYamlUsingPOSTParams struct {

	/*APIVersion
	  The version of the API in yyyy-MM-dd format (UTC). For versioning information please refer to /codestream/api/about

	*/
	APIVersion string
	/*Body
	  Pipeline/Endpoint specification in YAML

	*/
	Body string

	timeout    time.Duration
	Context    context.Context
	HTTPClient *http.Client
}

// WithTimeout adds the timeout to the import yaml using p o s t params
func (o *ImportYamlUsingPOSTParams) WithTimeout(timeout time.Duration) *ImportYamlUsingPOSTParams {
	o.SetTimeout(timeout)
	return o
}

// SetTimeout adds the timeout to the import yaml using p o s t params
func (o *ImportYamlUsingPOSTParams) SetTimeout(timeout time.Duration) {
	o.timeout = timeout
}

// WithContext adds the context to the import yaml using p o s t params
func (o *ImportYamlUsingPOSTParams) WithContext(ctx context.Context) *ImportYamlUsingPOSTParams {
	o.SetContext(ctx)
	return o
}

// SetContext adds the context to the import yaml using p o s t params
func (o *ImportYamlUsingPOSTParams) SetContext(ctx context.Context) {
	o.Context = ctx
}

// WithHTTPClient adds the HTTPClient to the import yaml using p o s t params
func (o *ImportYamlUsingPOSTParams) WithHTTPClient(client *http.Client) *ImportYamlUsingPOSTParams {
	o.SetHTTPClient(client)
	return o
}

// SetHTTPClient adds the HTTPClient to the import yaml using p o s t params
func (o *ImportYamlUsingPOSTParams) SetHTTPClient(client *http.Client) {
	o.HTTPClient = client
}

// WithAPIVersion adds the aPIVersion to the import yaml using p o s t params
func (o *ImportYamlUsingPOSTParams) WithAPIVersion(aPIVersion string) *ImportYamlUsingPOSTParams {
	o.SetAPIVersion(aPIVersion)
	return o
}

// SetAPIVersion adds the apiVersion to the import yaml using p o s t params
func (o *ImportYamlUsingPOSTParams) SetAPIVersion(aPIVersion string) {
	o.APIVersion = aPIVersion
}

// WithBody adds the body to the import yaml using p o s t params
func (o *ImportYamlUsingPOSTParams) WithBody(body string) *ImportYamlUsingPOSTParams {
	o.SetBody(body)
	return o
}

// SetBody adds the body to the import yaml using p o s t params
func (o *ImportYamlUsingPOSTParams) SetBody(body string) {
	o.Body = body
}

// WriteToRequest writes these params to a swagger request
func (o *ImportYamlUsingPOSTParams) WriteToRequest(r runtime.ClientRequest, reg strfmt.Registry) error {

	if err := r.SetTimeout(o.timeout); err != nil {
		return err
	}
	var res []error

	// query param apiVersion
	qrAPIVersion := o.APIVersion
	qAPIVersion := qrAPIVersion
	if err := r.SetQueryParam("apiVersion", qAPIVersion); err != nil {
		return err
	}

	if err := r.SetBodyParam(o.Body); err != nil {
		return err
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}
