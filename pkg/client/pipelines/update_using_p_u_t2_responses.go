// Code generated by go-swagger; DO NOT EDIT.

package pipelines

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"

	"github.com/go-openapi/runtime"

	strfmt "github.com/go-openapi/strfmt"

	models "github.com/vmware/vra-sdk-go/pkg/models"
)

// UpdateUsingPUT2Reader is a Reader for the UpdateUsingPUT2 structure.
type UpdateUsingPUT2Reader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *UpdateUsingPUT2Reader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewUpdateUsingPUT2OK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 401:
		result := NewUpdateUsingPUT2Unauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 403:
		result := NewUpdateUsingPUT2Forbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewUpdateUsingPUT2NotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 500:
		result := NewUpdateUsingPUT2InternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	default:
		return nil, runtime.NewAPIError("unknown error", response, response.Code())
	}
}

// NewUpdateUsingPUT2OK creates a UpdateUsingPUT2OK with default headers values
func NewUpdateUsingPUT2OK() *UpdateUsingPUT2OK {
	return &UpdateUsingPUT2OK{}
}

/*UpdateUsingPUT2OK handles this case with default header values.

'Success' with the updated Pipeline
*/
type UpdateUsingPUT2OK struct {
	Payload models.Pipeline
}

func (o *UpdateUsingPUT2OK) Error() string {
	return fmt.Sprintf("[PUT /codestream/api/pipelines/{id}][%d] updateUsingPUT2OK  %+v", 200, o.Payload)
}

func (o *UpdateUsingPUT2OK) GetPayload() models.Pipeline {
	return o.Payload
}

func (o *UpdateUsingPUT2OK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response payload as interface type
	payload, err := models.UnmarshalPipeline(response.Body(), consumer)
	if err != nil {
		return err
	}
	o.Payload = payload

	return nil
}

// NewUpdateUsingPUT2Unauthorized creates a UpdateUsingPUT2Unauthorized with default headers values
func NewUpdateUsingPUT2Unauthorized() *UpdateUsingPUT2Unauthorized {
	return &UpdateUsingPUT2Unauthorized{}
}

/*UpdateUsingPUT2Unauthorized handles this case with default header values.

Unauthorized Request
*/
type UpdateUsingPUT2Unauthorized struct {
}

func (o *UpdateUsingPUT2Unauthorized) Error() string {
	return fmt.Sprintf("[PUT /codestream/api/pipelines/{id}][%d] updateUsingPUT2Unauthorized ", 401)
}

func (o *UpdateUsingPUT2Unauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewUpdateUsingPUT2Forbidden creates a UpdateUsingPUT2Forbidden with default headers values
func NewUpdateUsingPUT2Forbidden() *UpdateUsingPUT2Forbidden {
	return &UpdateUsingPUT2Forbidden{}
}

/*UpdateUsingPUT2Forbidden handles this case with default header values.

Forbidden
*/
type UpdateUsingPUT2Forbidden struct {
}

func (o *UpdateUsingPUT2Forbidden) Error() string {
	return fmt.Sprintf("[PUT /codestream/api/pipelines/{id}][%d] updateUsingPUT2Forbidden ", 403)
}

func (o *UpdateUsingPUT2Forbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewUpdateUsingPUT2NotFound creates a UpdateUsingPUT2NotFound with default headers values
func NewUpdateUsingPUT2NotFound() *UpdateUsingPUT2NotFound {
	return &UpdateUsingPUT2NotFound{}
}

/*UpdateUsingPUT2NotFound handles this case with default header values.

Not Found
*/
type UpdateUsingPUT2NotFound struct {
}

func (o *UpdateUsingPUT2NotFound) Error() string {
	return fmt.Sprintf("[PUT /codestream/api/pipelines/{id}][%d] updateUsingPUT2NotFound ", 404)
}

func (o *UpdateUsingPUT2NotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewUpdateUsingPUT2InternalServerError creates a UpdateUsingPUT2InternalServerError with default headers values
func NewUpdateUsingPUT2InternalServerError() *UpdateUsingPUT2InternalServerError {
	return &UpdateUsingPUT2InternalServerError{}
}

/*UpdateUsingPUT2InternalServerError handles this case with default header values.

Server Error
*/
type UpdateUsingPUT2InternalServerError struct {
}

func (o *UpdateUsingPUT2InternalServerError) Error() string {
	return fmt.Sprintf("[PUT /codestream/api/pipelines/{id}][%d] updateUsingPUT2InternalServerError ", 500)
}

func (o *UpdateUsingPUT2InternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}
