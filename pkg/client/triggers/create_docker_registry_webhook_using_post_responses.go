// Code generated by go-swagger; DO NOT EDIT.

package triggers

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"

	"github.com/go-openapi/runtime"

	strfmt "github.com/go-openapi/strfmt"

	models "github.com/vmware/vra-sdk-go/pkg/models"
)

// CreateDockerRegistryWebhookUsingPOSTReader is a Reader for the CreateDockerRegistryWebhookUsingPOST structure.
type CreateDockerRegistryWebhookUsingPOSTReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *CreateDockerRegistryWebhookUsingPOSTReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewCreateDockerRegistryWebhookUsingPOSTOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 401:
		result := NewCreateDockerRegistryWebhookUsingPOSTUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 403:
		result := NewCreateDockerRegistryWebhookUsingPOSTForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewCreateDockerRegistryWebhookUsingPOSTNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 500:
		result := NewCreateDockerRegistryWebhookUsingPOSTInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	default:
		return nil, runtime.NewAPIError("unknown error", response, response.Code())
	}
}

// NewCreateDockerRegistryWebhookUsingPOSTOK creates a CreateDockerRegistryWebhookUsingPOSTOK with default headers values
func NewCreateDockerRegistryWebhookUsingPOSTOK() *CreateDockerRegistryWebhookUsingPOSTOK {
	return &CreateDockerRegistryWebhookUsingPOSTOK{}
}

/*CreateDockerRegistryWebhookUsingPOSTOK handles this case with default header values.

'Success' with Creation of Docker Registry Webhook
*/
type CreateDockerRegistryWebhookUsingPOSTOK struct {
	Payload models.DockerRegistryWebHook
}

func (o *CreateDockerRegistryWebhookUsingPOSTOK) Error() string {
	return fmt.Sprintf("[POST /codestream/api/registry-webhooks][%d] createDockerRegistryWebhookUsingPOSTOK  %+v", 200, o.Payload)
}

func (o *CreateDockerRegistryWebhookUsingPOSTOK) GetPayload() models.DockerRegistryWebHook {
	return o.Payload
}

func (o *CreateDockerRegistryWebhookUsingPOSTOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response payload as interface type
	payload, err := models.UnmarshalDockerRegistryWebHook(response.Body(), consumer)
	if err != nil {
		return err
	}
	o.Payload = payload

	return nil
}

// NewCreateDockerRegistryWebhookUsingPOSTUnauthorized creates a CreateDockerRegistryWebhookUsingPOSTUnauthorized with default headers values
func NewCreateDockerRegistryWebhookUsingPOSTUnauthorized() *CreateDockerRegistryWebhookUsingPOSTUnauthorized {
	return &CreateDockerRegistryWebhookUsingPOSTUnauthorized{}
}

/*CreateDockerRegistryWebhookUsingPOSTUnauthorized handles this case with default header values.

Unauthorized Request
*/
type CreateDockerRegistryWebhookUsingPOSTUnauthorized struct {
}

func (o *CreateDockerRegistryWebhookUsingPOSTUnauthorized) Error() string {
	return fmt.Sprintf("[POST /codestream/api/registry-webhooks][%d] createDockerRegistryWebhookUsingPOSTUnauthorized ", 401)
}

func (o *CreateDockerRegistryWebhookUsingPOSTUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewCreateDockerRegistryWebhookUsingPOSTForbidden creates a CreateDockerRegistryWebhookUsingPOSTForbidden with default headers values
func NewCreateDockerRegistryWebhookUsingPOSTForbidden() *CreateDockerRegistryWebhookUsingPOSTForbidden {
	return &CreateDockerRegistryWebhookUsingPOSTForbidden{}
}

/*CreateDockerRegistryWebhookUsingPOSTForbidden handles this case with default header values.

Forbidden
*/
type CreateDockerRegistryWebhookUsingPOSTForbidden struct {
}

func (o *CreateDockerRegistryWebhookUsingPOSTForbidden) Error() string {
	return fmt.Sprintf("[POST /codestream/api/registry-webhooks][%d] createDockerRegistryWebhookUsingPOSTForbidden ", 403)
}

func (o *CreateDockerRegistryWebhookUsingPOSTForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewCreateDockerRegistryWebhookUsingPOSTNotFound creates a CreateDockerRegistryWebhookUsingPOSTNotFound with default headers values
func NewCreateDockerRegistryWebhookUsingPOSTNotFound() *CreateDockerRegistryWebhookUsingPOSTNotFound {
	return &CreateDockerRegistryWebhookUsingPOSTNotFound{}
}

/*CreateDockerRegistryWebhookUsingPOSTNotFound handles this case with default header values.

Not Found
*/
type CreateDockerRegistryWebhookUsingPOSTNotFound struct {
}

func (o *CreateDockerRegistryWebhookUsingPOSTNotFound) Error() string {
	return fmt.Sprintf("[POST /codestream/api/registry-webhooks][%d] createDockerRegistryWebhookUsingPOSTNotFound ", 404)
}

func (o *CreateDockerRegistryWebhookUsingPOSTNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewCreateDockerRegistryWebhookUsingPOSTInternalServerError creates a CreateDockerRegistryWebhookUsingPOSTInternalServerError with default headers values
func NewCreateDockerRegistryWebhookUsingPOSTInternalServerError() *CreateDockerRegistryWebhookUsingPOSTInternalServerError {
	return &CreateDockerRegistryWebhookUsingPOSTInternalServerError{}
}

/*CreateDockerRegistryWebhookUsingPOSTInternalServerError handles this case with default header values.

Server Error
*/
type CreateDockerRegistryWebhookUsingPOSTInternalServerError struct {
}

func (o *CreateDockerRegistryWebhookUsingPOSTInternalServerError) Error() string {
	return fmt.Sprintf("[POST /codestream/api/registry-webhooks][%d] createDockerRegistryWebhookUsingPOSTInternalServerError ", 500)
}

func (o *CreateDockerRegistryWebhookUsingPOSTInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}
