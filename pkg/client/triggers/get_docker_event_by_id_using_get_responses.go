// Code generated by go-swagger; DO NOT EDIT.

package triggers

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"

	"github.com/go-openapi/runtime"

	strfmt "github.com/go-openapi/strfmt"

	models "github.com/vmware/vra-sdk-go/pkg/models"
)

// GetDockerEventByIDUsingGETReader is a Reader for the GetDockerEventByIDUsingGET structure.
type GetDockerEventByIDUsingGETReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *GetDockerEventByIDUsingGETReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewGetDockerEventByIDUsingGETOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 401:
		result := NewGetDockerEventByIDUsingGETUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 403:
		result := NewGetDockerEventByIDUsingGETForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewGetDockerEventByIDUsingGETNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 500:
		result := NewGetDockerEventByIDUsingGETInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	default:
		return nil, runtime.NewAPIError("unknown error", response, response.Code())
	}
}

// NewGetDockerEventByIDUsingGETOK creates a GetDockerEventByIDUsingGETOK with default headers values
func NewGetDockerEventByIDUsingGETOK() *GetDockerEventByIDUsingGETOK {
	return &GetDockerEventByIDUsingGETOK{}
}

/*GetDockerEventByIDUsingGETOK handles this case with default header values.

'Success' with Docker Registry Event
*/
type GetDockerEventByIDUsingGETOK struct {
	Payload models.DockerRegistryEvent
}

func (o *GetDockerEventByIDUsingGETOK) Error() string {
	return fmt.Sprintf("[GET /codestream/api/registry-events/{id}][%d] getDockerEventByIdUsingGETOK  %+v", 200, o.Payload)
}

func (o *GetDockerEventByIDUsingGETOK) GetPayload() models.DockerRegistryEvent {
	return o.Payload
}

func (o *GetDockerEventByIDUsingGETOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response payload as interface type
	payload, err := models.UnmarshalDockerRegistryEvent(response.Body(), consumer)
	if err != nil {
		return err
	}
	o.Payload = payload

	return nil
}

// NewGetDockerEventByIDUsingGETUnauthorized creates a GetDockerEventByIDUsingGETUnauthorized with default headers values
func NewGetDockerEventByIDUsingGETUnauthorized() *GetDockerEventByIDUsingGETUnauthorized {
	return &GetDockerEventByIDUsingGETUnauthorized{}
}

/*GetDockerEventByIDUsingGETUnauthorized handles this case with default header values.

Unauthorized Request
*/
type GetDockerEventByIDUsingGETUnauthorized struct {
}

func (o *GetDockerEventByIDUsingGETUnauthorized) Error() string {
	return fmt.Sprintf("[GET /codestream/api/registry-events/{id}][%d] getDockerEventByIdUsingGETUnauthorized ", 401)
}

func (o *GetDockerEventByIDUsingGETUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewGetDockerEventByIDUsingGETForbidden creates a GetDockerEventByIDUsingGETForbidden with default headers values
func NewGetDockerEventByIDUsingGETForbidden() *GetDockerEventByIDUsingGETForbidden {
	return &GetDockerEventByIDUsingGETForbidden{}
}

/*GetDockerEventByIDUsingGETForbidden handles this case with default header values.

Forbidden
*/
type GetDockerEventByIDUsingGETForbidden struct {
}

func (o *GetDockerEventByIDUsingGETForbidden) Error() string {
	return fmt.Sprintf("[GET /codestream/api/registry-events/{id}][%d] getDockerEventByIdUsingGETForbidden ", 403)
}

func (o *GetDockerEventByIDUsingGETForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewGetDockerEventByIDUsingGETNotFound creates a GetDockerEventByIDUsingGETNotFound with default headers values
func NewGetDockerEventByIDUsingGETNotFound() *GetDockerEventByIDUsingGETNotFound {
	return &GetDockerEventByIDUsingGETNotFound{}
}

/*GetDockerEventByIDUsingGETNotFound handles this case with default header values.

Not Found
*/
type GetDockerEventByIDUsingGETNotFound struct {
}

func (o *GetDockerEventByIDUsingGETNotFound) Error() string {
	return fmt.Sprintf("[GET /codestream/api/registry-events/{id}][%d] getDockerEventByIdUsingGETNotFound ", 404)
}

func (o *GetDockerEventByIDUsingGETNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewGetDockerEventByIDUsingGETInternalServerError creates a GetDockerEventByIDUsingGETInternalServerError with default headers values
func NewGetDockerEventByIDUsingGETInternalServerError() *GetDockerEventByIDUsingGETInternalServerError {
	return &GetDockerEventByIDUsingGETInternalServerError{}
}

/*GetDockerEventByIDUsingGETInternalServerError handles this case with default header values.

Server Error
*/
type GetDockerEventByIDUsingGETInternalServerError struct {
}

func (o *GetDockerEventByIDUsingGETInternalServerError) Error() string {
	return fmt.Sprintf("[GET /codestream/api/registry-events/{id}][%d] getDockerEventByIdUsingGETInternalServerError ", 500)
}

func (o *GetDockerEventByIDUsingGETInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}
