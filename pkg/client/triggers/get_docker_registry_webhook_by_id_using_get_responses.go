// Code generated by go-swagger; DO NOT EDIT.

package triggers

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"

	"github.com/go-openapi/runtime"

	strfmt "github.com/go-openapi/strfmt"

	models "github.com/vmware/vra-sdk-go/pkg/models"
)

// GetDockerRegistryWebhookByIDUsingGETReader is a Reader for the GetDockerRegistryWebhookByIDUsingGET structure.
type GetDockerRegistryWebhookByIDUsingGETReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *GetDockerRegistryWebhookByIDUsingGETReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewGetDockerRegistryWebhookByIDUsingGETOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 401:
		result := NewGetDockerRegistryWebhookByIDUsingGETUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 403:
		result := NewGetDockerRegistryWebhookByIDUsingGETForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewGetDockerRegistryWebhookByIDUsingGETNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 500:
		result := NewGetDockerRegistryWebhookByIDUsingGETInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	default:
		return nil, runtime.NewAPIError("unknown error", response, response.Code())
	}
}

// NewGetDockerRegistryWebhookByIDUsingGETOK creates a GetDockerRegistryWebhookByIDUsingGETOK with default headers values
func NewGetDockerRegistryWebhookByIDUsingGETOK() *GetDockerRegistryWebhookByIDUsingGETOK {
	return &GetDockerRegistryWebhookByIDUsingGETOK{}
}

/*GetDockerRegistryWebhookByIDUsingGETOK handles this case with default header values.

'Success' with get on Docker Registry Webhook
*/
type GetDockerRegistryWebhookByIDUsingGETOK struct {
	Payload models.DockerRegistryWebHook
}

func (o *GetDockerRegistryWebhookByIDUsingGETOK) Error() string {
	return fmt.Sprintf("[GET /codestream/api/registry-webhooks/{id}][%d] getDockerRegistryWebhookByIdUsingGETOK  %+v", 200, o.Payload)
}

func (o *GetDockerRegistryWebhookByIDUsingGETOK) GetPayload() models.DockerRegistryWebHook {
	return o.Payload
}

func (o *GetDockerRegistryWebhookByIDUsingGETOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response payload as interface type
	payload, err := models.UnmarshalDockerRegistryWebHook(response.Body(), consumer)
	if err != nil {
		return err
	}
	o.Payload = payload

	return nil
}

// NewGetDockerRegistryWebhookByIDUsingGETUnauthorized creates a GetDockerRegistryWebhookByIDUsingGETUnauthorized with default headers values
func NewGetDockerRegistryWebhookByIDUsingGETUnauthorized() *GetDockerRegistryWebhookByIDUsingGETUnauthorized {
	return &GetDockerRegistryWebhookByIDUsingGETUnauthorized{}
}

/*GetDockerRegistryWebhookByIDUsingGETUnauthorized handles this case with default header values.

Unauthorized Request
*/
type GetDockerRegistryWebhookByIDUsingGETUnauthorized struct {
}

func (o *GetDockerRegistryWebhookByIDUsingGETUnauthorized) Error() string {
	return fmt.Sprintf("[GET /codestream/api/registry-webhooks/{id}][%d] getDockerRegistryWebhookByIdUsingGETUnauthorized ", 401)
}

func (o *GetDockerRegistryWebhookByIDUsingGETUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewGetDockerRegistryWebhookByIDUsingGETForbidden creates a GetDockerRegistryWebhookByIDUsingGETForbidden with default headers values
func NewGetDockerRegistryWebhookByIDUsingGETForbidden() *GetDockerRegistryWebhookByIDUsingGETForbidden {
	return &GetDockerRegistryWebhookByIDUsingGETForbidden{}
}

/*GetDockerRegistryWebhookByIDUsingGETForbidden handles this case with default header values.

Forbidden
*/
type GetDockerRegistryWebhookByIDUsingGETForbidden struct {
}

func (o *GetDockerRegistryWebhookByIDUsingGETForbidden) Error() string {
	return fmt.Sprintf("[GET /codestream/api/registry-webhooks/{id}][%d] getDockerRegistryWebhookByIdUsingGETForbidden ", 403)
}

func (o *GetDockerRegistryWebhookByIDUsingGETForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewGetDockerRegistryWebhookByIDUsingGETNotFound creates a GetDockerRegistryWebhookByIDUsingGETNotFound with default headers values
func NewGetDockerRegistryWebhookByIDUsingGETNotFound() *GetDockerRegistryWebhookByIDUsingGETNotFound {
	return &GetDockerRegistryWebhookByIDUsingGETNotFound{}
}

/*GetDockerRegistryWebhookByIDUsingGETNotFound handles this case with default header values.

Not Found
*/
type GetDockerRegistryWebhookByIDUsingGETNotFound struct {
}

func (o *GetDockerRegistryWebhookByIDUsingGETNotFound) Error() string {
	return fmt.Sprintf("[GET /codestream/api/registry-webhooks/{id}][%d] getDockerRegistryWebhookByIdUsingGETNotFound ", 404)
}

func (o *GetDockerRegistryWebhookByIDUsingGETNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewGetDockerRegistryWebhookByIDUsingGETInternalServerError creates a GetDockerRegistryWebhookByIDUsingGETInternalServerError with default headers values
func NewGetDockerRegistryWebhookByIDUsingGETInternalServerError() *GetDockerRegistryWebhookByIDUsingGETInternalServerError {
	return &GetDockerRegistryWebhookByIDUsingGETInternalServerError{}
}

/*GetDockerRegistryWebhookByIDUsingGETInternalServerError handles this case with default header values.

Server Error
*/
type GetDockerRegistryWebhookByIDUsingGETInternalServerError struct {
}

func (o *GetDockerRegistryWebhookByIDUsingGETInternalServerError) Error() string {
	return fmt.Sprintf("[GET /codestream/api/registry-webhooks/{id}][%d] getDockerRegistryWebhookByIdUsingGETInternalServerError ", 500)
}

func (o *GetDockerRegistryWebhookByIDUsingGETInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}
