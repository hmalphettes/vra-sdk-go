// Code generated by go-swagger; DO NOT EDIT.

package triggers

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"

	"github.com/go-openapi/runtime"

	strfmt "github.com/go-openapi/strfmt"

	models "github.com/vmware/vra-sdk-go/pkg/models"
)

// GetDockerRegistryWebhookByNameUsingGETReader is a Reader for the GetDockerRegistryWebhookByNameUsingGET structure.
type GetDockerRegistryWebhookByNameUsingGETReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *GetDockerRegistryWebhookByNameUsingGETReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewGetDockerRegistryWebhookByNameUsingGETOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 401:
		result := NewGetDockerRegistryWebhookByNameUsingGETUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 403:
		result := NewGetDockerRegistryWebhookByNameUsingGETForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewGetDockerRegistryWebhookByNameUsingGETNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 500:
		result := NewGetDockerRegistryWebhookByNameUsingGETInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	default:
		return nil, runtime.NewAPIError("unknown error", response, response.Code())
	}
}

// NewGetDockerRegistryWebhookByNameUsingGETOK creates a GetDockerRegistryWebhookByNameUsingGETOK with default headers values
func NewGetDockerRegistryWebhookByNameUsingGETOK() *GetDockerRegistryWebhookByNameUsingGETOK {
	return &GetDockerRegistryWebhookByNameUsingGETOK{}
}

/*GetDockerRegistryWebhookByNameUsingGETOK handles this case with default header values.

'Success' with Docker Registry Webhook
*/
type GetDockerRegistryWebhookByNameUsingGETOK struct {
	Payload models.DockerRegistryWebHook
}

func (o *GetDockerRegistryWebhookByNameUsingGETOK) Error() string {
	return fmt.Sprintf("[GET /codestream/api/registry-webhooks/{project}/{name}][%d] getDockerRegistryWebhookByNameUsingGETOK  %+v", 200, o.Payload)
}

func (o *GetDockerRegistryWebhookByNameUsingGETOK) GetPayload() models.DockerRegistryWebHook {
	return o.Payload
}

func (o *GetDockerRegistryWebhookByNameUsingGETOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response payload as interface type
	payload, err := models.UnmarshalDockerRegistryWebHook(response.Body(), consumer)
	if err != nil {
		return err
	}
	o.Payload = payload

	return nil
}

// NewGetDockerRegistryWebhookByNameUsingGETUnauthorized creates a GetDockerRegistryWebhookByNameUsingGETUnauthorized with default headers values
func NewGetDockerRegistryWebhookByNameUsingGETUnauthorized() *GetDockerRegistryWebhookByNameUsingGETUnauthorized {
	return &GetDockerRegistryWebhookByNameUsingGETUnauthorized{}
}

/*GetDockerRegistryWebhookByNameUsingGETUnauthorized handles this case with default header values.

Unauthorized Request
*/
type GetDockerRegistryWebhookByNameUsingGETUnauthorized struct {
}

func (o *GetDockerRegistryWebhookByNameUsingGETUnauthorized) Error() string {
	return fmt.Sprintf("[GET /codestream/api/registry-webhooks/{project}/{name}][%d] getDockerRegistryWebhookByNameUsingGETUnauthorized ", 401)
}

func (o *GetDockerRegistryWebhookByNameUsingGETUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewGetDockerRegistryWebhookByNameUsingGETForbidden creates a GetDockerRegistryWebhookByNameUsingGETForbidden with default headers values
func NewGetDockerRegistryWebhookByNameUsingGETForbidden() *GetDockerRegistryWebhookByNameUsingGETForbidden {
	return &GetDockerRegistryWebhookByNameUsingGETForbidden{}
}

/*GetDockerRegistryWebhookByNameUsingGETForbidden handles this case with default header values.

Forbidden
*/
type GetDockerRegistryWebhookByNameUsingGETForbidden struct {
}

func (o *GetDockerRegistryWebhookByNameUsingGETForbidden) Error() string {
	return fmt.Sprintf("[GET /codestream/api/registry-webhooks/{project}/{name}][%d] getDockerRegistryWebhookByNameUsingGETForbidden ", 403)
}

func (o *GetDockerRegistryWebhookByNameUsingGETForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewGetDockerRegistryWebhookByNameUsingGETNotFound creates a GetDockerRegistryWebhookByNameUsingGETNotFound with default headers values
func NewGetDockerRegistryWebhookByNameUsingGETNotFound() *GetDockerRegistryWebhookByNameUsingGETNotFound {
	return &GetDockerRegistryWebhookByNameUsingGETNotFound{}
}

/*GetDockerRegistryWebhookByNameUsingGETNotFound handles this case with default header values.

Not Found
*/
type GetDockerRegistryWebhookByNameUsingGETNotFound struct {
}

func (o *GetDockerRegistryWebhookByNameUsingGETNotFound) Error() string {
	return fmt.Sprintf("[GET /codestream/api/registry-webhooks/{project}/{name}][%d] getDockerRegistryWebhookByNameUsingGETNotFound ", 404)
}

func (o *GetDockerRegistryWebhookByNameUsingGETNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewGetDockerRegistryWebhookByNameUsingGETInternalServerError creates a GetDockerRegistryWebhookByNameUsingGETInternalServerError with default headers values
func NewGetDockerRegistryWebhookByNameUsingGETInternalServerError() *GetDockerRegistryWebhookByNameUsingGETInternalServerError {
	return &GetDockerRegistryWebhookByNameUsingGETInternalServerError{}
}

/*GetDockerRegistryWebhookByNameUsingGETInternalServerError handles this case with default header values.

Server Error
*/
type GetDockerRegistryWebhookByNameUsingGETInternalServerError struct {
}

func (o *GetDockerRegistryWebhookByNameUsingGETInternalServerError) Error() string {
	return fmt.Sprintf("[GET /codestream/api/registry-webhooks/{project}/{name}][%d] getDockerRegistryWebhookByNameUsingGETInternalServerError ", 500)
}

func (o *GetDockerRegistryWebhookByNameUsingGETInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}
