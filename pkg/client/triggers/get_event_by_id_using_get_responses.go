// Code generated by go-swagger; DO NOT EDIT.

package triggers

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"

	"github.com/go-openapi/runtime"

	strfmt "github.com/go-openapi/strfmt"

	models "github.com/vmware/vra-sdk-go/pkg/models"
)

// GetEventByIDUsingGETReader is a Reader for the GetEventByIDUsingGET structure.
type GetEventByIDUsingGETReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *GetEventByIDUsingGETReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewGetEventByIDUsingGETOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 401:
		result := NewGetEventByIDUsingGETUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 403:
		result := NewGetEventByIDUsingGETForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewGetEventByIDUsingGETNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 500:
		result := NewGetEventByIDUsingGETInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	default:
		return nil, runtime.NewAPIError("unknown error", response, response.Code())
	}
}

// NewGetEventByIDUsingGETOK creates a GetEventByIDUsingGETOK with default headers values
func NewGetEventByIDUsingGETOK() *GetEventByIDUsingGETOK {
	return &GetEventByIDUsingGETOK{}
}

/*GetEventByIDUsingGETOK handles this case with default header values.

'Success' with gerrit Event
*/
type GetEventByIDUsingGETOK struct {
	Payload models.GerritEvent
}

func (o *GetEventByIDUsingGETOK) Error() string {
	return fmt.Sprintf("[GET /codestream/api/gerrit-events/{id}][%d] getEventByIdUsingGETOK  %+v", 200, o.Payload)
}

func (o *GetEventByIDUsingGETOK) GetPayload() models.GerritEvent {
	return o.Payload
}

func (o *GetEventByIDUsingGETOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response payload as interface type
	payload, err := models.UnmarshalGerritEvent(response.Body(), consumer)
	if err != nil {
		return err
	}
	o.Payload = payload

	return nil
}

// NewGetEventByIDUsingGETUnauthorized creates a GetEventByIDUsingGETUnauthorized with default headers values
func NewGetEventByIDUsingGETUnauthorized() *GetEventByIDUsingGETUnauthorized {
	return &GetEventByIDUsingGETUnauthorized{}
}

/*GetEventByIDUsingGETUnauthorized handles this case with default header values.

Unauthorized Request
*/
type GetEventByIDUsingGETUnauthorized struct {
}

func (o *GetEventByIDUsingGETUnauthorized) Error() string {
	return fmt.Sprintf("[GET /codestream/api/gerrit-events/{id}][%d] getEventByIdUsingGETUnauthorized ", 401)
}

func (o *GetEventByIDUsingGETUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewGetEventByIDUsingGETForbidden creates a GetEventByIDUsingGETForbidden with default headers values
func NewGetEventByIDUsingGETForbidden() *GetEventByIDUsingGETForbidden {
	return &GetEventByIDUsingGETForbidden{}
}

/*GetEventByIDUsingGETForbidden handles this case with default header values.

Forbidden
*/
type GetEventByIDUsingGETForbidden struct {
}

func (o *GetEventByIDUsingGETForbidden) Error() string {
	return fmt.Sprintf("[GET /codestream/api/gerrit-events/{id}][%d] getEventByIdUsingGETForbidden ", 403)
}

func (o *GetEventByIDUsingGETForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewGetEventByIDUsingGETNotFound creates a GetEventByIDUsingGETNotFound with default headers values
func NewGetEventByIDUsingGETNotFound() *GetEventByIDUsingGETNotFound {
	return &GetEventByIDUsingGETNotFound{}
}

/*GetEventByIDUsingGETNotFound handles this case with default header values.

Not Found
*/
type GetEventByIDUsingGETNotFound struct {
}

func (o *GetEventByIDUsingGETNotFound) Error() string {
	return fmt.Sprintf("[GET /codestream/api/gerrit-events/{id}][%d] getEventByIdUsingGETNotFound ", 404)
}

func (o *GetEventByIDUsingGETNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewGetEventByIDUsingGETInternalServerError creates a GetEventByIDUsingGETInternalServerError with default headers values
func NewGetEventByIDUsingGETInternalServerError() *GetEventByIDUsingGETInternalServerError {
	return &GetEventByIDUsingGETInternalServerError{}
}

/*GetEventByIDUsingGETInternalServerError handles this case with default header values.

Server Error
*/
type GetEventByIDUsingGETInternalServerError struct {
}

func (o *GetEventByIDUsingGETInternalServerError) Error() string {
	return fmt.Sprintf("[GET /codestream/api/gerrit-events/{id}][%d] getEventByIdUsingGETInternalServerError ", 500)
}

func (o *GetEventByIDUsingGETInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}
