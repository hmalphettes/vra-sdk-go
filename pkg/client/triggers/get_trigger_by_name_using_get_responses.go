// Code generated by go-swagger; DO NOT EDIT.

package triggers

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"

	"github.com/go-openapi/runtime"

	strfmt "github.com/go-openapi/strfmt"

	models "github.com/vmware/vra-sdk-go/pkg/models"
)

// GetTriggerByNameUsingGETReader is a Reader for the GetTriggerByNameUsingGET structure.
type GetTriggerByNameUsingGETReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *GetTriggerByNameUsingGETReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewGetTriggerByNameUsingGETOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 401:
		result := NewGetTriggerByNameUsingGETUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 403:
		result := NewGetTriggerByNameUsingGETForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewGetTriggerByNameUsingGETNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 500:
		result := NewGetTriggerByNameUsingGETInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	default:
		return nil, runtime.NewAPIError("unknown error", response, response.Code())
	}
}

// NewGetTriggerByNameUsingGETOK creates a GetTriggerByNameUsingGETOK with default headers values
func NewGetTriggerByNameUsingGETOK() *GetTriggerByNameUsingGETOK {
	return &GetTriggerByNameUsingGETOK{}
}

/*GetTriggerByNameUsingGETOK handles this case with default header values.

'Success' with gerrit trigger
*/
type GetTriggerByNameUsingGETOK struct {
	Payload models.GerritTrigger
}

func (o *GetTriggerByNameUsingGETOK) Error() string {
	return fmt.Sprintf("[GET /codestream/api/gerrit-triggers/{project}/{name}][%d] getTriggerByNameUsingGETOK  %+v", 200, o.Payload)
}

func (o *GetTriggerByNameUsingGETOK) GetPayload() models.GerritTrigger {
	return o.Payload
}

func (o *GetTriggerByNameUsingGETOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response payload as interface type
	payload, err := models.UnmarshalGerritTrigger(response.Body(), consumer)
	if err != nil {
		return err
	}
	o.Payload = payload

	return nil
}

// NewGetTriggerByNameUsingGETUnauthorized creates a GetTriggerByNameUsingGETUnauthorized with default headers values
func NewGetTriggerByNameUsingGETUnauthorized() *GetTriggerByNameUsingGETUnauthorized {
	return &GetTriggerByNameUsingGETUnauthorized{}
}

/*GetTriggerByNameUsingGETUnauthorized handles this case with default header values.

Unauthorized Request
*/
type GetTriggerByNameUsingGETUnauthorized struct {
}

func (o *GetTriggerByNameUsingGETUnauthorized) Error() string {
	return fmt.Sprintf("[GET /codestream/api/gerrit-triggers/{project}/{name}][%d] getTriggerByNameUsingGETUnauthorized ", 401)
}

func (o *GetTriggerByNameUsingGETUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewGetTriggerByNameUsingGETForbidden creates a GetTriggerByNameUsingGETForbidden with default headers values
func NewGetTriggerByNameUsingGETForbidden() *GetTriggerByNameUsingGETForbidden {
	return &GetTriggerByNameUsingGETForbidden{}
}

/*GetTriggerByNameUsingGETForbidden handles this case with default header values.

Forbidden
*/
type GetTriggerByNameUsingGETForbidden struct {
}

func (o *GetTriggerByNameUsingGETForbidden) Error() string {
	return fmt.Sprintf("[GET /codestream/api/gerrit-triggers/{project}/{name}][%d] getTriggerByNameUsingGETForbidden ", 403)
}

func (o *GetTriggerByNameUsingGETForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewGetTriggerByNameUsingGETNotFound creates a GetTriggerByNameUsingGETNotFound with default headers values
func NewGetTriggerByNameUsingGETNotFound() *GetTriggerByNameUsingGETNotFound {
	return &GetTriggerByNameUsingGETNotFound{}
}

/*GetTriggerByNameUsingGETNotFound handles this case with default header values.

Not Found
*/
type GetTriggerByNameUsingGETNotFound struct {
}

func (o *GetTriggerByNameUsingGETNotFound) Error() string {
	return fmt.Sprintf("[GET /codestream/api/gerrit-triggers/{project}/{name}][%d] getTriggerByNameUsingGETNotFound ", 404)
}

func (o *GetTriggerByNameUsingGETNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewGetTriggerByNameUsingGETInternalServerError creates a GetTriggerByNameUsingGETInternalServerError with default headers values
func NewGetTriggerByNameUsingGETInternalServerError() *GetTriggerByNameUsingGETInternalServerError {
	return &GetTriggerByNameUsingGETInternalServerError{}
}

/*GetTriggerByNameUsingGETInternalServerError handles this case with default header values.

Server Error
*/
type GetTriggerByNameUsingGETInternalServerError struct {
}

func (o *GetTriggerByNameUsingGETInternalServerError) Error() string {
	return fmt.Sprintf("[GET /codestream/api/gerrit-triggers/{project}/{name}][%d] getTriggerByNameUsingGETInternalServerError ", 500)
}

func (o *GetTriggerByNameUsingGETInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}
