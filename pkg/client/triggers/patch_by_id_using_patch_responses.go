// Code generated by go-swagger; DO NOT EDIT.

package triggers

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"

	"github.com/go-openapi/runtime"

	strfmt "github.com/go-openapi/strfmt"

	models "github.com/vmware/vra-sdk-go/pkg/models"
)

// PatchByIDUsingPATCHReader is a Reader for the PatchByIDUsingPATCH structure.
type PatchByIDUsingPATCHReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *PatchByIDUsingPATCHReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewPatchByIDUsingPATCHOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 401:
		result := NewPatchByIDUsingPATCHUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 403:
		result := NewPatchByIDUsingPATCHForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewPatchByIDUsingPATCHNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 500:
		result := NewPatchByIDUsingPATCHInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	default:
		return nil, runtime.NewAPIError("unknown error", response, response.Code())
	}
}

// NewPatchByIDUsingPATCHOK creates a PatchByIDUsingPATCHOK with default headers values
func NewPatchByIDUsingPATCHOK() *PatchByIDUsingPATCHOK {
	return &PatchByIDUsingPATCHOK{}
}

/*PatchByIDUsingPATCHOK handles this case with default header values.

'Success' with Docker Registry Webhook patch
*/
type PatchByIDUsingPATCHOK struct {
	Payload models.DockerRegistryWebHook
}

func (o *PatchByIDUsingPATCHOK) Error() string {
	return fmt.Sprintf("[PATCH /codestream/api/registry-webhooks/{id}][%d] patchByIdUsingPATCHOK  %+v", 200, o.Payload)
}

func (o *PatchByIDUsingPATCHOK) GetPayload() models.DockerRegistryWebHook {
	return o.Payload
}

func (o *PatchByIDUsingPATCHOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response payload as interface type
	payload, err := models.UnmarshalDockerRegistryWebHook(response.Body(), consumer)
	if err != nil {
		return err
	}
	o.Payload = payload

	return nil
}

// NewPatchByIDUsingPATCHUnauthorized creates a PatchByIDUsingPATCHUnauthorized with default headers values
func NewPatchByIDUsingPATCHUnauthorized() *PatchByIDUsingPATCHUnauthorized {
	return &PatchByIDUsingPATCHUnauthorized{}
}

/*PatchByIDUsingPATCHUnauthorized handles this case with default header values.

Unauthorized Request
*/
type PatchByIDUsingPATCHUnauthorized struct {
}

func (o *PatchByIDUsingPATCHUnauthorized) Error() string {
	return fmt.Sprintf("[PATCH /codestream/api/registry-webhooks/{id}][%d] patchByIdUsingPATCHUnauthorized ", 401)
}

func (o *PatchByIDUsingPATCHUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewPatchByIDUsingPATCHForbidden creates a PatchByIDUsingPATCHForbidden with default headers values
func NewPatchByIDUsingPATCHForbidden() *PatchByIDUsingPATCHForbidden {
	return &PatchByIDUsingPATCHForbidden{}
}

/*PatchByIDUsingPATCHForbidden handles this case with default header values.

Forbidden
*/
type PatchByIDUsingPATCHForbidden struct {
}

func (o *PatchByIDUsingPATCHForbidden) Error() string {
	return fmt.Sprintf("[PATCH /codestream/api/registry-webhooks/{id}][%d] patchByIdUsingPATCHForbidden ", 403)
}

func (o *PatchByIDUsingPATCHForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewPatchByIDUsingPATCHNotFound creates a PatchByIDUsingPATCHNotFound with default headers values
func NewPatchByIDUsingPATCHNotFound() *PatchByIDUsingPATCHNotFound {
	return &PatchByIDUsingPATCHNotFound{}
}

/*PatchByIDUsingPATCHNotFound handles this case with default header values.

Not Found
*/
type PatchByIDUsingPATCHNotFound struct {
}

func (o *PatchByIDUsingPATCHNotFound) Error() string {
	return fmt.Sprintf("[PATCH /codestream/api/registry-webhooks/{id}][%d] patchByIdUsingPATCHNotFound ", 404)
}

func (o *PatchByIDUsingPATCHNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewPatchByIDUsingPATCHInternalServerError creates a PatchByIDUsingPATCHInternalServerError with default headers values
func NewPatchByIDUsingPATCHInternalServerError() *PatchByIDUsingPATCHInternalServerError {
	return &PatchByIDUsingPATCHInternalServerError{}
}

/*PatchByIDUsingPATCHInternalServerError handles this case with default header values.

Server Error
*/
type PatchByIDUsingPATCHInternalServerError struct {
}

func (o *PatchByIDUsingPATCHInternalServerError) Error() string {
	return fmt.Sprintf("[PATCH /codestream/api/registry-webhooks/{id}][%d] patchByIdUsingPATCHInternalServerError ", 500)
}

func (o *PatchByIDUsingPATCHInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}
