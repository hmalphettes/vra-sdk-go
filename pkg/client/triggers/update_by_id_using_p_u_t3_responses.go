// Code generated by go-swagger; DO NOT EDIT.

package triggers

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"

	"github.com/go-openapi/runtime"

	strfmt "github.com/go-openapi/strfmt"

	models "github.com/vmware/vra-sdk-go/pkg/models"
)

// UpdateByIDUsingPUT3Reader is a Reader for the UpdateByIDUsingPUT3 structure.
type UpdateByIDUsingPUT3Reader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *UpdateByIDUsingPUT3Reader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewUpdateByIDUsingPUT3OK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 401:
		result := NewUpdateByIDUsingPUT3Unauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 403:
		result := NewUpdateByIDUsingPUT3Forbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewUpdateByIDUsingPUT3NotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 500:
		result := NewUpdateByIDUsingPUT3InternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	default:
		return nil, runtime.NewAPIError("unknown error", response, response.Code())
	}
}

// NewUpdateByIDUsingPUT3OK creates a UpdateByIDUsingPUT3OK with default headers values
func NewUpdateByIDUsingPUT3OK() *UpdateByIDUsingPUT3OK {
	return &UpdateByIDUsingPUT3OK{}
}

/*UpdateByIDUsingPUT3OK handles this case with default header values.

'Success' with Gerrit Trigger Update
*/
type UpdateByIDUsingPUT3OK struct {
	Payload models.GerritTrigger
}

func (o *UpdateByIDUsingPUT3OK) Error() string {
	return fmt.Sprintf("[PUT /codestream/api/gerrit-triggers/{id}][%d] updateByIdUsingPUT3OK  %+v", 200, o.Payload)
}

func (o *UpdateByIDUsingPUT3OK) GetPayload() models.GerritTrigger {
	return o.Payload
}

func (o *UpdateByIDUsingPUT3OK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response payload as interface type
	payload, err := models.UnmarshalGerritTrigger(response.Body(), consumer)
	if err != nil {
		return err
	}
	o.Payload = payload

	return nil
}

// NewUpdateByIDUsingPUT3Unauthorized creates a UpdateByIDUsingPUT3Unauthorized with default headers values
func NewUpdateByIDUsingPUT3Unauthorized() *UpdateByIDUsingPUT3Unauthorized {
	return &UpdateByIDUsingPUT3Unauthorized{}
}

/*UpdateByIDUsingPUT3Unauthorized handles this case with default header values.

Unauthorized Request
*/
type UpdateByIDUsingPUT3Unauthorized struct {
}

func (o *UpdateByIDUsingPUT3Unauthorized) Error() string {
	return fmt.Sprintf("[PUT /codestream/api/gerrit-triggers/{id}][%d] updateByIdUsingPUT3Unauthorized ", 401)
}

func (o *UpdateByIDUsingPUT3Unauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewUpdateByIDUsingPUT3Forbidden creates a UpdateByIDUsingPUT3Forbidden with default headers values
func NewUpdateByIDUsingPUT3Forbidden() *UpdateByIDUsingPUT3Forbidden {
	return &UpdateByIDUsingPUT3Forbidden{}
}

/*UpdateByIDUsingPUT3Forbidden handles this case with default header values.

Forbidden
*/
type UpdateByIDUsingPUT3Forbidden struct {
}

func (o *UpdateByIDUsingPUT3Forbidden) Error() string {
	return fmt.Sprintf("[PUT /codestream/api/gerrit-triggers/{id}][%d] updateByIdUsingPUT3Forbidden ", 403)
}

func (o *UpdateByIDUsingPUT3Forbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewUpdateByIDUsingPUT3NotFound creates a UpdateByIDUsingPUT3NotFound with default headers values
func NewUpdateByIDUsingPUT3NotFound() *UpdateByIDUsingPUT3NotFound {
	return &UpdateByIDUsingPUT3NotFound{}
}

/*UpdateByIDUsingPUT3NotFound handles this case with default header values.

Not Found
*/
type UpdateByIDUsingPUT3NotFound struct {
}

func (o *UpdateByIDUsingPUT3NotFound) Error() string {
	return fmt.Sprintf("[PUT /codestream/api/gerrit-triggers/{id}][%d] updateByIdUsingPUT3NotFound ", 404)
}

func (o *UpdateByIDUsingPUT3NotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewUpdateByIDUsingPUT3InternalServerError creates a UpdateByIDUsingPUT3InternalServerError with default headers values
func NewUpdateByIDUsingPUT3InternalServerError() *UpdateByIDUsingPUT3InternalServerError {
	return &UpdateByIDUsingPUT3InternalServerError{}
}

/*UpdateByIDUsingPUT3InternalServerError handles this case with default header values.

Server Error
*/
type UpdateByIDUsingPUT3InternalServerError struct {
}

func (o *UpdateByIDUsingPUT3InternalServerError) Error() string {
	return fmt.Sprintf("[PUT /codestream/api/gerrit-triggers/{id}][%d] updateByIdUsingPUT3InternalServerError ", 500)
}

func (o *UpdateByIDUsingPUT3InternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}
