// Code generated by go-swagger; DO NOT EDIT.

package triggers

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"context"
	"net/http"
	"time"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/runtime"
	cr "github.com/go-openapi/runtime/client"

	strfmt "github.com/go-openapi/strfmt"

	models "github.com/vmware/vra-sdk-go/pkg/models"
)

// NewUpdateUsingPUT1Params creates a new UpdateUsingPUT1Params object
// with the default values initialized.
func NewUpdateUsingPUT1Params() *UpdateUsingPUT1Params {
	var ()
	return &UpdateUsingPUT1Params{

		timeout: cr.DefaultTimeout,
	}
}

// NewUpdateUsingPUT1ParamsWithTimeout creates a new UpdateUsingPUT1Params object
// with the default values initialized, and the ability to set a timeout on a request
func NewUpdateUsingPUT1ParamsWithTimeout(timeout time.Duration) *UpdateUsingPUT1Params {
	var ()
	return &UpdateUsingPUT1Params{

		timeout: timeout,
	}
}

// NewUpdateUsingPUT1ParamsWithContext creates a new UpdateUsingPUT1Params object
// with the default values initialized, and the ability to set a context for a request
func NewUpdateUsingPUT1ParamsWithContext(ctx context.Context) *UpdateUsingPUT1Params {
	var ()
	return &UpdateUsingPUT1Params{

		Context: ctx,
	}
}

// NewUpdateUsingPUT1ParamsWithHTTPClient creates a new UpdateUsingPUT1Params object
// with the default values initialized, and the ability to set a custom HTTPClient for a request
func NewUpdateUsingPUT1ParamsWithHTTPClient(client *http.Client) *UpdateUsingPUT1Params {
	var ()
	return &UpdateUsingPUT1Params{
		HTTPClient: client,
	}
}

/*UpdateUsingPUT1Params contains all the parameters to send to the API endpoint
for the update using p u t 1 operation typically these are written to a http.Request
*/
type UpdateUsingPUT1Params struct {

	/*APIVersion
	  The version of the API in yyyy-MM-dd format (UTC). For versioning information please refer to /codestream/api/about

	*/
	APIVersion string
	/*GitWebhookSpec
	  gitWebhookSpec

	*/
	GitWebhookSpec models.GitWebhookSpec
	/*ID
	  id

	*/
	ID string

	timeout    time.Duration
	Context    context.Context
	HTTPClient *http.Client
}

// WithTimeout adds the timeout to the update using p u t 1 params
func (o *UpdateUsingPUT1Params) WithTimeout(timeout time.Duration) *UpdateUsingPUT1Params {
	o.SetTimeout(timeout)
	return o
}

// SetTimeout adds the timeout to the update using p u t 1 params
func (o *UpdateUsingPUT1Params) SetTimeout(timeout time.Duration) {
	o.timeout = timeout
}

// WithContext adds the context to the update using p u t 1 params
func (o *UpdateUsingPUT1Params) WithContext(ctx context.Context) *UpdateUsingPUT1Params {
	o.SetContext(ctx)
	return o
}

// SetContext adds the context to the update using p u t 1 params
func (o *UpdateUsingPUT1Params) SetContext(ctx context.Context) {
	o.Context = ctx
}

// WithHTTPClient adds the HTTPClient to the update using p u t 1 params
func (o *UpdateUsingPUT1Params) WithHTTPClient(client *http.Client) *UpdateUsingPUT1Params {
	o.SetHTTPClient(client)
	return o
}

// SetHTTPClient adds the HTTPClient to the update using p u t 1 params
func (o *UpdateUsingPUT1Params) SetHTTPClient(client *http.Client) {
	o.HTTPClient = client
}

// WithAPIVersion adds the aPIVersion to the update using p u t 1 params
func (o *UpdateUsingPUT1Params) WithAPIVersion(aPIVersion string) *UpdateUsingPUT1Params {
	o.SetAPIVersion(aPIVersion)
	return o
}

// SetAPIVersion adds the apiVersion to the update using p u t 1 params
func (o *UpdateUsingPUT1Params) SetAPIVersion(aPIVersion string) {
	o.APIVersion = aPIVersion
}

// WithGitWebhookSpec adds the gitWebhookSpec to the update using p u t 1 params
func (o *UpdateUsingPUT1Params) WithGitWebhookSpec(gitWebhookSpec models.GitWebhookSpec) *UpdateUsingPUT1Params {
	o.SetGitWebhookSpec(gitWebhookSpec)
	return o
}

// SetGitWebhookSpec adds the gitWebhookSpec to the update using p u t 1 params
func (o *UpdateUsingPUT1Params) SetGitWebhookSpec(gitWebhookSpec models.GitWebhookSpec) {
	o.GitWebhookSpec = gitWebhookSpec
}

// WithID adds the id to the update using p u t 1 params
func (o *UpdateUsingPUT1Params) WithID(id string) *UpdateUsingPUT1Params {
	o.SetID(id)
	return o
}

// SetID adds the id to the update using p u t 1 params
func (o *UpdateUsingPUT1Params) SetID(id string) {
	o.ID = id
}

// WriteToRequest writes these params to a swagger request
func (o *UpdateUsingPUT1Params) WriteToRequest(r runtime.ClientRequest, reg strfmt.Registry) error {

	if err := r.SetTimeout(o.timeout); err != nil {
		return err
	}
	var res []error

	// query param apiVersion
	qrAPIVersion := o.APIVersion
	qAPIVersion := qrAPIVersion
	if err := r.SetQueryParam("apiVersion", qAPIVersion); err != nil {
		return err
	}

	if err := r.SetBodyParam(o.GitWebhookSpec); err != nil {
		return err
	}

	// path param id
	if err := r.SetPathParam("id", o.ID); err != nil {
		return err
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}
