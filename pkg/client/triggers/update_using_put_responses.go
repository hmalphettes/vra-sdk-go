// Code generated by go-swagger; DO NOT EDIT.

package triggers

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"

	"github.com/go-openapi/runtime"

	strfmt "github.com/go-openapi/strfmt"

	models "github.com/vmware/vra-sdk-go/pkg/models"
)

// UpdateUsingPUTReader is a Reader for the UpdateUsingPUT structure.
type UpdateUsingPUTReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *UpdateUsingPUTReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewUpdateUsingPUTOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 401:
		result := NewUpdateUsingPUTUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 403:
		result := NewUpdateUsingPUTForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewUpdateUsingPUTNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 500:
		result := NewUpdateUsingPUTInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	default:
		return nil, runtime.NewAPIError("unknown error", response, response.Code())
	}
}

// NewUpdateUsingPUTOK creates a UpdateUsingPUTOK with default headers values
func NewUpdateUsingPUTOK() *UpdateUsingPUTOK {
	return &UpdateUsingPUTOK{}
}

/*UpdateUsingPUTOK handles this case with default header values.

'Success' with Docker Registry Webhook Update
*/
type UpdateUsingPUTOK struct {
	Payload models.DockerRegistryWebHook
}

func (o *UpdateUsingPUTOK) Error() string {
	return fmt.Sprintf("[PUT /codestream/api/registry-webhooks/{id}][%d] updateUsingPUTOK  %+v", 200, o.Payload)
}

func (o *UpdateUsingPUTOK) GetPayload() models.DockerRegistryWebHook {
	return o.Payload
}

func (o *UpdateUsingPUTOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response payload as interface type
	payload, err := models.UnmarshalDockerRegistryWebHook(response.Body(), consumer)
	if err != nil {
		return err
	}
	o.Payload = payload

	return nil
}

// NewUpdateUsingPUTUnauthorized creates a UpdateUsingPUTUnauthorized with default headers values
func NewUpdateUsingPUTUnauthorized() *UpdateUsingPUTUnauthorized {
	return &UpdateUsingPUTUnauthorized{}
}

/*UpdateUsingPUTUnauthorized handles this case with default header values.

Unauthorized Request
*/
type UpdateUsingPUTUnauthorized struct {
}

func (o *UpdateUsingPUTUnauthorized) Error() string {
	return fmt.Sprintf("[PUT /codestream/api/registry-webhooks/{id}][%d] updateUsingPUTUnauthorized ", 401)
}

func (o *UpdateUsingPUTUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewUpdateUsingPUTForbidden creates a UpdateUsingPUTForbidden with default headers values
func NewUpdateUsingPUTForbidden() *UpdateUsingPUTForbidden {
	return &UpdateUsingPUTForbidden{}
}

/*UpdateUsingPUTForbidden handles this case with default header values.

Forbidden
*/
type UpdateUsingPUTForbidden struct {
}

func (o *UpdateUsingPUTForbidden) Error() string {
	return fmt.Sprintf("[PUT /codestream/api/registry-webhooks/{id}][%d] updateUsingPUTForbidden ", 403)
}

func (o *UpdateUsingPUTForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewUpdateUsingPUTNotFound creates a UpdateUsingPUTNotFound with default headers values
func NewUpdateUsingPUTNotFound() *UpdateUsingPUTNotFound {
	return &UpdateUsingPUTNotFound{}
}

/*UpdateUsingPUTNotFound handles this case with default header values.

Not Found
*/
type UpdateUsingPUTNotFound struct {
}

func (o *UpdateUsingPUTNotFound) Error() string {
	return fmt.Sprintf("[PUT /codestream/api/registry-webhooks/{id}][%d] updateUsingPUTNotFound ", 404)
}

func (o *UpdateUsingPUTNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewUpdateUsingPUTInternalServerError creates a UpdateUsingPUTInternalServerError with default headers values
func NewUpdateUsingPUTInternalServerError() *UpdateUsingPUTInternalServerError {
	return &UpdateUsingPUTInternalServerError{}
}

/*UpdateUsingPUTInternalServerError handles this case with default header values.

Server Error
*/
type UpdateUsingPUTInternalServerError struct {
}

func (o *UpdateUsingPUTInternalServerError) Error() string {
	return fmt.Sprintf("[PUT /codestream/api/registry-webhooks/{id}][%d] updateUsingPUTInternalServerError ", 500)
}

func (o *UpdateUsingPUTInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}
