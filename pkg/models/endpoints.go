// Code generated by go-swagger; DO NOT EDIT.

package models

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	strfmt "github.com/go-openapi/strfmt"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/swag"
	"github.com/go-openapi/validate"
)

// Endpoints Endpoints
// swagger:model Endpoints
type Endpoints struct {

	// Number of resources within the current page.
	Count int64 `json:"count,omitempty"`

	// Details of the queried resources.
	Documents map[string]Endpoint `json:"documents,omitempty"`

	// Partial URLs representing the links to the queried resources.
	Links []string `json:"links"`

	// Number of resources across all pages.
	TotalCount int64 `json:"totalCount,omitempty"`
}

// Validate validates this endpoints
func (m *Endpoints) Validate(formats strfmt.Registry) error {
	var res []error

	if err := m.validateDocuments(formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (m *Endpoints) validateDocuments(formats strfmt.Registry) error {

	if swag.IsZero(m.Documents) { // not required
		return nil
	}

	for k := range m.Documents {

		if err := validate.Required("documents"+"."+k, "body", m.Documents[k]); err != nil {
			return err
		}
		if val, ok := m.Documents[k]; ok {
			if err := val.Validate(formats); err != nil {
				return err
			}
		}

	}

	return nil
}

// MarshalBinary interface implementation
func (m *Endpoints) MarshalBinary() ([]byte, error) {
	if m == nil {
		return nil, nil
	}
	return swag.WriteJSON(m)
}

// UnmarshalBinary interface implementation
func (m *Endpoints) UnmarshalBinary(b []byte) error {
	var res Endpoints
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*m = res
	return nil
}
