// Code generated by go-swagger; DO NOT EDIT.

package models

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	strfmt "github.com/go-openapi/strfmt"

	"github.com/go-openapi/swag"
)

// GerritTriggerGerritEventConfiguration GerritTrigger$GerritEventConfiguration
// swagger:model GerritTriggerGerritEventConfiguration
type GerritTriggerGerritEventConfiguration struct {

	// Type of the gerrit event.
	EventType string `json:"eventType,omitempty"`

	// Comment to be posted to the ChangeSet on execution termination.
	FailureComment string `json:"failureComment,omitempty"`

	// Map representing the Input properties for the Pipeline.
	Input map[string]string `json:"input,omitempty"`

	// Pipeline that needs to be triggered on receiving this event.
	Pipeline string `json:"pipeline,omitempty"`

	// Comment to be posted to the ChangeSet on execution termination.
	SuccessComment string `json:"successComment,omitempty"`

	// The label to be posted on Gerrit Server to perform actions.
	VerifiedLabel string `json:"verifiedLabel,omitempty"`
}

// Validate validates this gerrit trigger gerrit event configuration
func (m *GerritTriggerGerritEventConfiguration) Validate(formats strfmt.Registry) error {
	return nil
}

// MarshalBinary interface implementation
func (m *GerritTriggerGerritEventConfiguration) MarshalBinary() ([]byte, error) {
	if m == nil {
		return nil, nil
	}
	return swag.WriteJSON(m)
}

// UnmarshalBinary interface implementation
func (m *GerritTriggerGerritEventConfiguration) UnmarshalBinary(b []byte) error {
	var res GerritTriggerGerritEventConfiguration
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*m = res
	return nil
}
